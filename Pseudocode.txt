LOAD
WRITE
MirrorX

type temp is array(2 to 0) of Integer 0 255
variable RGB : temp
for j in 1 to width
	for i in 1 to height / 2
		temp(2) := Img(i - 1, j - 1, 2)
		temp(1) := Img(i - 1, j - 1, 1)
		temp(0) := Img(i - 1, j - 1, 0)
		Img(i - 1, j - 1, 2) := Img(height - i, j - 1, 2)
		Img(i - 1, j - 1, 1) := Img(height - i, j - 1, 1)
		Img(i - 1, j - 1, 0) := Img(height - i, j - 1, 0)
		Img(height - i, j - 1, 2) := temp(2)
		Img(height - i, j - 1, 1) := temp(1)
		Img(height - i, j - 1, 0) := temp(0)
	end loop
end loop

MirrorY


type temp is array(2 to 0) of Integer 0 255
variable RGB : temp
for i in 1 to height
	for j in 1 to width / 2
		temp(2) := Img(i - 1, j - 1, 2)
		temp(1) := Img(i - 1, j - 1, 1)
		temp(0) := Img(i - 1, j - 1, 0)
		Img(i - 1, j - 1, 2) := Img(i - 1, width -j, 2)
		Img(i - 1, j - 1, 1) := Img(i - 1, width -j, 1)
		Img(i - 1, j - 1, 0) := Img(i - 1, width -j, 0)
		Img(i - 1, width -j, 2) := temp(2)
		Img(i - 1, width -j, 1) := temp(1)
		Img(i - 1, width -j, 0) := temp(0)
	end loop
end loop

Brightness
variable temp is array(2 to 0) of Integer 0 255
variable RGB is temp
for i in 1 to height
	for j in 1 to width
		if(RGB(2) = 0) then
			RGB(2) := 1
		if(RGB(2) = 0) then
			RGB(2) := 1
		if(RGB(2) = 0) then
			RGB(2) := 1
		RGB(2) = Img(i - 1, j - 1, 2) * bright / 100
		RGB(1) = Img(i - 1, j - 1, 1) * bright / 100
		RGB(0) = Img(i - 1, j - 1, 0) * bright / 100
		if(RGB(2) > 255) then
			RGB(2) := 255
		if(RGB(1) > 255) then
			RGB(1) := 255
		if(RGB(0) > 255) then
			RGB(0) := 255

127 x 120 = 15240 / 100 = 152.4 --> 152

Rotate
(0,0) --> (0, height)
(0, width) --> (width, height)
(height, width) --> (width, 0)
(height, 0) --> (0, 0)
. . . . 
. . . .
. . . .

variable Img2 : matrix;
for i in 1 to height
	for j in 1 to width
		Img2(j - 1, height - i) = Img(i - 1, j - 1)
		
